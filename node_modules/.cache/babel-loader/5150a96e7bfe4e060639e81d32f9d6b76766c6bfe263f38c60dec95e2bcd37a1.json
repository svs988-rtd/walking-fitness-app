{"ast":null,"code":"var _jsxFileName = \"/Users/stevegreen/code/walking-fitness-app/src/components/WalkingTimer.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './WalkingTimer.css';\nimport WalkingAnimation from './WalkingAnimation';\nimport ProgressionRecommendation from './ProgressionRecommendation';\nimport WalkingMap from './WalkingMap';\nimport './WalkingMap.css';\nimport 'leaflet/dist/leaflet.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WalkingTimer = () => {\n  _s();\n  const [isRunning, setIsRunning] = useState(false);\n  const [isPaused, setIsPaused] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [targetTime, setTargetTime] = useState(300); // 5 minutes default\n  const [sessions, setSessions] = useState([]);\n  const [currentTrack, setCurrentTrack] = useState([]);\n  const [gpsEnabled, setGpsEnabled] = useState(false);\n  const intervalRef = useRef(null);\n  const gpsWatchRef = useRef(null);\n  const hasCompletedRef = useRef(false);\n  const currentTrackRef = useRef([]);\n  useEffect(() => {\n    const storedSessions = localStorage.getItem('walkingSessions');\n    if (storedSessions) {\n      setSessions(JSON.parse(storedSessions));\n    }\n  }, []);\n  useEffect(() => {\n    if (isRunning && !isPaused) {\n      intervalRef.current = setInterval(() => {\n        setCurrentTime(prevTime => {\n          const newTime = prevTime + 1;\n          if (newTime >= targetTime) {\n            if (!hasCompletedRef.current) {\n              hasCompletedRef.current = true;\n            }\n            return targetTime;\n          }\n          return newTime;\n        });\n      }, 1000);\n    } else {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    }\n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    };\n  }, [isRunning, isPaused, targetTime]);\n\n  // Separate effect to handle completion\n  useEffect(() => {\n    if (currentTime >= targetTime && isRunning && hasCompletedRef.current) {\n      // Stop the timer immediately\n      setIsRunning(false);\n      setIsPaused(false);\n\n      // Save session to localStorage\n      const session = {\n        date: new Date().toISOString(),\n        duration: targetTime,\n        completed: true,\n        gpsTrack: currentTrack.length > 0 ? currentTrack : undefined\n      };\n      setSessions(prevSessions => {\n        const updatedSessions = [...prevSessions, session];\n        localStorage.setItem('walkingSessions', JSON.stringify(updatedSessions));\n        return updatedSessions;\n      });\n\n      // Reset current time\n      setTimeout(() => {\n        setCurrentTime(0);\n      }, 0);\n    }\n  }, [currentTime, targetTime, isRunning]);\n\n  // GPS tracking effect\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(() => {\n    if (isRunning && !isPaused && gpsEnabled) {\n      if ('geolocation' in navigator) {\n        gpsWatchRef.current = navigator.geolocation.watchPosition(position => {\n          const coordinate = {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude,\n            timestamp: Date.now()\n          };\n          setCurrentTrack(prev => [...prev, coordinate]);\n        }, error => {\n          console.error('GPS tracking error:', error);\n        }, {\n          enableHighAccuracy: true,\n          timeout: 10000,\n          maximumAge: 0\n        });\n      }\n    } else {\n      if (gpsWatchRef.current) {\n        navigator.geolocation.clearWatch(gpsWatchRef.current);\n        gpsWatchRef.current = null;\n      }\n    }\n    return () => {\n      if (gpsWatchRef.current) {\n        navigator.geolocation.clearWatch(gpsWatchRef.current);\n      }\n    };\n  }, [isRunning, isPaused, gpsEnabled]);\n  const requestGPSPermission = async () => {\n    if ('geolocation' in navigator) {\n      try {\n        const permission = await navigator.permissions.query({\n          name: 'geolocation'\n        });\n        if (permission.state === 'granted') {\n          setGpsEnabled(true);\n        } else if (permission.state === 'prompt') {\n          navigator.geolocation.getCurrentPosition(() => setGpsEnabled(true), error => {\n            console.error('GPS permission denied:', error);\n            setGpsEnabled(false);\n          });\n        }\n      } catch (error) {\n        console.error('GPS permission error:', error);\n      }\n    }\n  };\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n  const handleStart = () => {\n    setIsRunning(true);\n    setIsPaused(false);\n    hasCompletedRef.current = false;\n    setCurrentTrack([]); // Reset GPS track for new session\n  };\n  const handlePause = () => {\n    setIsPaused(true);\n  };\n  const handleResume = () => {\n    setIsPaused(false);\n  };\n  const handleStop = () => {\n    setIsRunning(false);\n    setIsPaused(false);\n    hasCompletedRef.current = false;\n\n    // Save incomplete session if any time was walked\n    if (currentTime > 0) {\n      const session = {\n        date: new Date().toISOString(),\n        duration: currentTime,\n        completed: false,\n        gpsTrack: currentTrack.length > 0 ? currentTrack : undefined\n      };\n      const updatedSessions = [...sessions, session];\n      setSessions(updatedSessions);\n      localStorage.setItem('walkingSessions', JSON.stringify(updatedSessions));\n    }\n    setCurrentTime(0);\n    setCurrentTrack([]); // Reset GPS track\n  };\n  const handleAcceptRecommendation = duration => {\n    setTargetTime(duration);\n  };\n  const progress = currentTime / targetTime * 100;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"walking-timer\",\n    children: [/*#__PURE__*/_jsxDEV(ProgressionRecommendation, {\n      sessions: sessions,\n      onAcceptRecommendation: handleAcceptRecommendation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WalkingAnimation, {\n      isActive: isRunning && !isPaused\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gps-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `btn btn-gps ${gpsEnabled ? 'active' : ''}`,\n        onClick: requestGPSPermission,\n        disabled: isRunning,\n        children: [\"\\uD83D\\uDCCD \", gpsEnabled ? 'GPS Enabled' : 'Enable GPS Tracking']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), gpsEnabled && currentTrack.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"gps-status\",\n        children: [\"\\uD83D\\uDCCA \", currentTrack.length, \" GPS points recorded\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer-display\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-circle\",\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          width: \"200\",\n          height: \"200\",\n          viewBox: \"0 0 200 200\",\n          children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n            cx: \"100\",\n            cy: \"100\",\n            r: \"90\",\n            fill: \"none\",\n            stroke: \"#e0e0e0\",\n            strokeWidth: \"8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n            cx: \"100\",\n            cy: \"100\",\n            r: \"90\",\n            fill: \"none\",\n            stroke: \"#4CAF50\",\n            strokeWidth: \"8\",\n            strokeDasharray: `${2 * Math.PI * 90}`,\n            strokeDashoffset: `${2 * Math.PI * 90 * (1 - progress / 100)}`,\n            transform: \"rotate(-90 100 100)\",\n            style: {\n              transition: 'stroke-dashoffset 0.5s ease'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timer-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"current-time\",\n            children: formatTime(currentTime)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"target-time\",\n            children: [\"/ \", formatTime(targetTime)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer-controls\",\n      children: !isRunning ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-start\",\n        onClick: handleStart,\n        children: \"Start Walking\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control-group\",\n        children: [isPaused ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-resume\",\n          onClick: handleResume,\n          children: \"Resume\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-pause\",\n          onClick: handlePause,\n          children: \"Pause\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-stop\",\n          onClick: handleStop,\n          children: \"Stop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"target-selector\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"target-time\",\n        children: \"Target Duration:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"target-time\",\n        value: targetTime,\n        onChange: e => setTargetTime(Number(e.target.value)),\n        disabled: isRunning,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: 180,\n          children: \"3 minutes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 300,\n          children: \"5 minutes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 600,\n          children: \"10 minutes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 900,\n          children: \"15 minutes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 1200,\n          children: \"20 minutes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 1800,\n          children: \"30 minutes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WalkingMap, {\n      sessions: sessions,\n      currentTrack: currentTrack,\n      isTracking: isRunning && !isPaused && gpsEnabled\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 208,\n    columnNumber: 5\n  }, this);\n};\n_s(WalkingTimer, \"DF15U//4D7+0uGsvWbu5xgbFq64=\");\n_c = WalkingTimer;\nexport default WalkingTimer;\nvar _c;\n$RefreshReg$(_c, \"WalkingTimer\");","map":{"version":3,"names":["React","useState","useEffect","useRef","WalkingAnimation","ProgressionRecommendation","WalkingMap","jsxDEV","_jsxDEV","WalkingTimer","_s","isRunning","setIsRunning","isPaused","setIsPaused","currentTime","setCurrentTime","targetTime","setTargetTime","sessions","setSessions","currentTrack","setCurrentTrack","gpsEnabled","setGpsEnabled","intervalRef","gpsWatchRef","hasCompletedRef","currentTrackRef","storedSessions","localStorage","getItem","JSON","parse","current","setInterval","prevTime","newTime","clearInterval","session","date","Date","toISOString","duration","completed","gpsTrack","length","undefined","prevSessions","updatedSessions","setItem","stringify","setTimeout","navigator","geolocation","watchPosition","position","coordinate","lat","coords","latitude","lng","longitude","timestamp","now","prev","error","console","enableHighAccuracy","timeout","maximumAge","clearWatch","requestGPSPermission","permission","permissions","query","name","state","getCurrentPosition","formatTime","seconds","mins","Math","floor","secs","toString","padStart","handleStart","handlePause","handleResume","handleStop","handleAcceptRecommendation","progress","className","children","onAcceptRecommendation","fileName","_jsxFileName","lineNumber","columnNumber","isActive","onClick","disabled","width","height","viewBox","cx","cy","r","fill","stroke","strokeWidth","strokeDasharray","PI","strokeDashoffset","transform","style","transition","htmlFor","id","value","onChange","e","Number","target","isTracking","_c","$RefreshReg$"],"sources":["/Users/stevegreen/code/walking-fitness-app/src/components/WalkingTimer.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './WalkingTimer.css';\nimport WalkingAnimation from './WalkingAnimation';\nimport ProgressionRecommendation from './ProgressionRecommendation';\nimport WalkingMap from './WalkingMap';\nimport './WalkingMap.css';\nimport 'leaflet/dist/leaflet.css';\n\ninterface GPSCoordinate {\n  lat: number;\n  lng: number;\n  timestamp: number;\n}\n\ninterface WalkingSession {\n  date: string;\n  duration: number;\n  completed: boolean;\n  gpsTrack?: GPSCoordinate[];\n}\n\nconst WalkingTimer: React.FC = () => {\n  const [isRunning, setIsRunning] = useState(false);\n  const [isPaused, setIsPaused] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [targetTime, setTargetTime] = useState(300); // 5 minutes default\n  const [sessions, setSessions] = useState<WalkingSession[]>([]);\n  const [currentTrack, setCurrentTrack] = useState<GPSCoordinate[]>([]);\n  const [gpsEnabled, setGpsEnabled] = useState(false);\n  const intervalRef = useRef<ReturnType<typeof setInterval> | null>(null);\n  const gpsWatchRef = useRef<number | null>(null);\n  const hasCompletedRef = useRef(false);\n  const currentTrackRef = useRef<GPSCoordinate[]>([]);\n\n  useEffect(() => {\n    const storedSessions = localStorage.getItem('walkingSessions');\n    if (storedSessions) {\n      setSessions(JSON.parse(storedSessions));\n    }\n  }, []);\n\n  useEffect(() => {\n    if (isRunning && !isPaused) {\n      intervalRef.current = setInterval(() => {\n        setCurrentTime(prevTime => {\n          const newTime = prevTime + 1;\n          if (newTime >= targetTime) {\n            if (!hasCompletedRef.current) {\n              hasCompletedRef.current = true;\n            }\n            return targetTime;\n          }\n          return newTime;\n        });\n      }, 1000);\n    } else {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    }\n\n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    };\n  }, [isRunning, isPaused, targetTime]);\n\n  // Separate effect to handle completion\n  useEffect(() => {\n    if (currentTime >= targetTime && isRunning && hasCompletedRef.current) {\n      // Stop the timer immediately\n      setIsRunning(false);\n      setIsPaused(false);\n      \n      // Save session to localStorage\n      const session: WalkingSession = {\n        date: new Date().toISOString(),\n        duration: targetTime,\n        completed: true,\n        gpsTrack: currentTrack.length > 0 ? currentTrack : undefined\n      };\n      \n      setSessions(prevSessions => {\n        const updatedSessions = [...prevSessions, session];\n        localStorage.setItem('walkingSessions', JSON.stringify(updatedSessions));\n        return updatedSessions;\n      });\n      \n      // Reset current time\n      setTimeout(() => {\n        setCurrentTime(0);\n      }, 0);\n    }\n  }, [currentTime, targetTime, isRunning]);\n\n  // GPS tracking effect\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(() => {\n    if (isRunning && !isPaused && gpsEnabled) {\n      if ('geolocation' in navigator) {\n        gpsWatchRef.current = navigator.geolocation.watchPosition(\n          (position) => {\n            const coordinate: GPSCoordinate = {\n              lat: position.coords.latitude,\n              lng: position.coords.longitude,\n              timestamp: Date.now()\n            };\n            setCurrentTrack(prev => [...prev, coordinate]);\n          },\n          (error) => {\n            console.error('GPS tracking error:', error);\n          },\n          {\n            enableHighAccuracy: true,\n            timeout: 10000,\n            maximumAge: 0\n          }\n        );\n      }\n    } else {\n      if (gpsWatchRef.current) {\n        navigator.geolocation.clearWatch(gpsWatchRef.current);\n        gpsWatchRef.current = null;\n      }\n    }\n\n    return () => {\n      if (gpsWatchRef.current) {\n        navigator.geolocation.clearWatch(gpsWatchRef.current);\n      }\n    };\n  }, [isRunning, isPaused, gpsEnabled]);\n\n  const requestGPSPermission = async () => {\n    if ('geolocation' in navigator) {\n      try {\n        const permission = await navigator.permissions.query({ name: 'geolocation' });\n        if (permission.state === 'granted') {\n          setGpsEnabled(true);\n        } else if (permission.state === 'prompt') {\n          navigator.geolocation.getCurrentPosition(\n            () => setGpsEnabled(true),\n            (error) => {\n              console.error('GPS permission denied:', error);\n              setGpsEnabled(false);\n            }\n          );\n        }\n      } catch (error) {\n        console.error('GPS permission error:', error);\n      }\n    }\n  };\n\n  const formatTime = (seconds: number): string => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  const handleStart = () => {\n    setIsRunning(true);\n    setIsPaused(false);\n    hasCompletedRef.current = false;\n    setCurrentTrack([]); // Reset GPS track for new session\n  };\n\n  const handlePause = () => {\n    setIsPaused(true);\n  };\n\n  const handleResume = () => {\n    setIsPaused(false);\n  };\n\n  const handleStop = () => {\n    setIsRunning(false);\n    setIsPaused(false);\n    hasCompletedRef.current = false;\n    \n    // Save incomplete session if any time was walked\n    if (currentTime > 0) {\n      const session: WalkingSession = {\n        date: new Date().toISOString(),\n        duration: currentTime,\n        completed: false,\n        gpsTrack: currentTrack.length > 0 ? currentTrack : undefined\n      };\n      \n      const updatedSessions = [...sessions, session];\n      setSessions(updatedSessions);\n      localStorage.setItem('walkingSessions', JSON.stringify(updatedSessions));\n    }\n    \n    setCurrentTime(0);\n    setCurrentTrack([]); // Reset GPS track\n  };\n\n\n  const handleAcceptRecommendation = (duration: number) => {\n    setTargetTime(duration);\n  };\n\n  const progress = (currentTime / targetTime) * 100;\n\n  return (\n    <div className=\"walking-timer\">\n      <ProgressionRecommendation \n        sessions={sessions}\n        onAcceptRecommendation={handleAcceptRecommendation}\n      />\n      \n      <WalkingAnimation isActive={isRunning && !isPaused} />\n      \n      <div className=\"gps-controls\">\n        <button \n          className={`btn btn-gps ${gpsEnabled ? 'active' : ''}`}\n          onClick={requestGPSPermission}\n          disabled={isRunning}\n        >\n          📍 {gpsEnabled ? 'GPS Enabled' : 'Enable GPS Tracking'}\n        </button>\n        {gpsEnabled && currentTrack.length > 0 && (\n          <span className=\"gps-status\">\n            📊 {currentTrack.length} GPS points recorded\n          </span>\n        )}\n      </div>\n      \n      <div className=\"timer-display\">\n        <div className=\"progress-circle\">\n          <svg width=\"200\" height=\"200\" viewBox=\"0 0 200 200\">\n            <circle\n              cx=\"100\"\n              cy=\"100\"\n              r=\"90\"\n              fill=\"none\"\n              stroke=\"#e0e0e0\"\n              strokeWidth=\"8\"\n            />\n            <circle\n              cx=\"100\"\n              cy=\"100\"\n              r=\"90\"\n              fill=\"none\"\n              stroke=\"#4CAF50\"\n              strokeWidth=\"8\"\n              strokeDasharray={`${2 * Math.PI * 90}`}\n              strokeDashoffset={`${2 * Math.PI * 90 * (1 - progress / 100)}`}\n              transform=\"rotate(-90 100 100)\"\n              style={{ transition: 'stroke-dashoffset 0.5s ease' }}\n            />\n          </svg>\n          <div className=\"timer-text\">\n            <div className=\"current-time\">{formatTime(currentTime)}</div>\n            <div className=\"target-time\">/ {formatTime(targetTime)}</div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"timer-controls\">\n        {!isRunning ? (\n          <button className=\"btn btn-start\" onClick={handleStart}>\n            Start Walking\n          </button>\n        ) : (\n          <div className=\"control-group\">\n            {isPaused ? (\n              <button className=\"btn btn-resume\" onClick={handleResume}>\n                Resume\n              </button>\n            ) : (\n              <button className=\"btn btn-pause\" onClick={handlePause}>\n                Pause\n              </button>\n            )}\n            <button className=\"btn btn-stop\" onClick={handleStop}>\n              Stop\n            </button>\n          </div>\n        )}\n      </div>\n\n      <div className=\"target-selector\">\n        <label htmlFor=\"target-time\">Target Duration:</label>\n        <select\n          id=\"target-time\"\n          value={targetTime}\n          onChange={(e) => setTargetTime(Number(e.target.value))}\n          disabled={isRunning}\n        >\n          <option value={180}>3 minutes</option>\n          <option value={300}>5 minutes</option>\n          <option value={600}>10 minutes</option>\n          <option value={900}>15 minutes</option>\n          <option value={1200}>20 minutes</option>\n          <option value={1800}>30 minutes</option>\n        </select>\n      </div>\n\n      <WalkingMap \n        sessions={sessions}\n        currentTrack={currentTrack}\n        isTracking={isRunning && !isPaused && gpsEnabled}\n      />\n    </div>\n  );\n};\n\nexport default WalkingTimer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}