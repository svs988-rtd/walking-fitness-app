{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import'./WalkingTimer.css';import WalkingAnimation from'./WalkingAnimation';import ProgressionRecommendation from'./ProgressionRecommendation';import WalkingMap from'./WalkingMap';import'./WalkingMap.css';import'leaflet/dist/leaflet.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const WalkingTimer=()=>{const[isRunning,setIsRunning]=useState(false);const[isPaused,setIsPaused]=useState(false);const[currentTime,setCurrentTime]=useState(0);const[targetTime,setTargetTime]=useState(300);// 5 minutes default\nconst[sessions,setSessions]=useState([]);const[currentTrack,setCurrentTrack]=useState([]);const[gpsEnabled,setGpsEnabled]=useState(false);const intervalRef=useRef(null);const gpsWatchRef=useRef(null);const hasCompletedRef=useRef(false);const currentTrackRef=useRef([]);useEffect(()=>{const storedSessions=localStorage.getItem('walkingSessions');if(storedSessions){setSessions(JSON.parse(storedSessions));}},[]);useEffect(()=>{if(isRunning&&!isPaused){intervalRef.current=setInterval(()=>{setCurrentTime(prevTime=>{const newTime=prevTime+1;if(newTime>=targetTime){if(!hasCompletedRef.current){hasCompletedRef.current=true;}return targetTime;}return newTime;});},1000);}else{if(intervalRef.current){clearInterval(intervalRef.current);}}return()=>{if(intervalRef.current){clearInterval(intervalRef.current);}};},[isRunning,isPaused,targetTime]);// Separate effect to handle completion\nuseEffect(()=>{if(currentTime>=targetTime&&isRunning&&hasCompletedRef.current){// Stop the timer immediately\nsetIsRunning(false);setIsPaused(false);// Save session to localStorage\nconst session={date:new Date().toISOString(),duration:targetTime,completed:true,gpsTrack:currentTrackRef.current.length>0?currentTrackRef.current:undefined};setSessions(prevSessions=>{const updatedSessions=[...prevSessions,session];localStorage.setItem('walkingSessions',JSON.stringify(updatedSessions));return updatedSessions;});// Reset current time\nsetTimeout(()=>{setCurrentTime(0);},0);}},[currentTime,targetTime,isRunning]);// GPS tracking effect\n// eslint-disable-next-line react-hooks/exhaustive-deps\nuseEffect(()=>{if(isRunning&&!isPaused&&gpsEnabled){if('geolocation'in navigator){gpsWatchRef.current=navigator.geolocation.watchPosition(position=>{const coordinate={lat:position.coords.latitude,lng:position.coords.longitude,timestamp:Date.now()};setCurrentTrack(prev=>[...prev,coordinate]);},error=>{console.error('GPS tracking error:',error);},{enableHighAccuracy:true,timeout:10000,maximumAge:0});}}else{if(gpsWatchRef.current){navigator.geolocation.clearWatch(gpsWatchRef.current);gpsWatchRef.current=null;}}return()=>{if(gpsWatchRef.current){navigator.geolocation.clearWatch(gpsWatchRef.current);}};},[isRunning,isPaused,gpsEnabled]);// Keep ref in sync with currentTrack state\nuseEffect(()=>{currentTrackRef.current=currentTrack;},[currentTrack]);const requestGPSPermission=async()=>{if('geolocation'in navigator){try{const permission=await navigator.permissions.query({name:'geolocation'});if(permission.state==='granted'){setGpsEnabled(true);}else if(permission.state==='prompt'){navigator.geolocation.getCurrentPosition(()=>setGpsEnabled(true),error=>{console.error('GPS permission denied:',error);setGpsEnabled(false);});}}catch(error){console.error('GPS permission error:',error);}}};const formatTime=seconds=>{const mins=Math.floor(seconds/60);const secs=seconds%60;return`${mins.toString().padStart(2,'0')}:${secs.toString().padStart(2,'0')}`;};const handleStart=()=>{setIsRunning(true);setIsPaused(false);hasCompletedRef.current=false;setCurrentTrack([]);// Reset GPS track for new session\n};const handlePause=()=>{setIsPaused(true);};const handleResume=()=>{setIsPaused(false);};const handleStop=()=>{setIsRunning(false);setIsPaused(false);hasCompletedRef.current=false;// Save incomplete session if any time was walked\nif(currentTime>0){const session={date:new Date().toISOString(),duration:currentTime,completed:false,gpsTrack:currentTrackRef.current.length>0?currentTrackRef.current:undefined};const updatedSessions=[...sessions,session];setSessions(updatedSessions);localStorage.setItem('walkingSessions',JSON.stringify(updatedSessions));}setCurrentTime(0);setCurrentTrack([]);// Reset GPS track\n};const handleAcceptRecommendation=duration=>{setTargetTime(duration);};const progress=currentTime/targetTime*100;return/*#__PURE__*/_jsxs(\"div\",{className:\"walking-timer\",children:[/*#__PURE__*/_jsx(ProgressionRecommendation,{sessions:sessions,onAcceptRecommendation:handleAcceptRecommendation}),/*#__PURE__*/_jsx(WalkingAnimation,{isActive:isRunning&&!isPaused}),/*#__PURE__*/_jsxs(\"div\",{className:\"gps-controls\",children:[/*#__PURE__*/_jsxs(\"button\",{className:`btn btn-gps ${gpsEnabled?'active':''}`,onClick:requestGPSPermission,disabled:isRunning,children:[\"\\uD83D\\uDCCD \",gpsEnabled?'GPS Enabled':'Enable GPS Tracking']}),gpsEnabled&&currentTrack.length>0&&/*#__PURE__*/_jsxs(\"span\",{className:\"gps-status\",children:[\"\\uD83D\\uDCCA \",currentTrack.length,\" GPS points recorded\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"timer-display\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"progress-circle\",children:[/*#__PURE__*/_jsxs(\"svg\",{width:\"200\",height:\"200\",viewBox:\"0 0 200 200\",children:[/*#__PURE__*/_jsx(\"circle\",{cx:\"100\",cy:\"100\",r:\"90\",fill:\"none\",stroke:\"#e0e0e0\",strokeWidth:\"8\"}),/*#__PURE__*/_jsx(\"circle\",{cx:\"100\",cy:\"100\",r:\"90\",fill:\"none\",stroke:\"#4CAF50\",strokeWidth:\"8\",strokeDasharray:`${2*Math.PI*90}`,strokeDashoffset:`${2*Math.PI*90*(1-progress/100)}`,transform:\"rotate(-90 100 100)\",style:{transition:'stroke-dashoffset 0.5s ease'}})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"timer-text\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"current-time\",children:formatTime(currentTime)}),/*#__PURE__*/_jsxs(\"div\",{className:\"target-time\",children:[\"/ \",formatTime(targetTime)]})]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"timer-controls\",children:!isRunning?/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-start\",onClick:handleStart,children:\"Start Walking\"}):/*#__PURE__*/_jsxs(\"div\",{className:\"control-group\",children:[isPaused?/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-resume\",onClick:handleResume,children:\"Resume\"}):/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-pause\",onClick:handlePause,children:\"Pause\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-stop\",onClick:handleStop,children:\"Stop\"})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"target-selector\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"target-time\",children:\"Target Duration:\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"target-time\",value:targetTime,onChange:e=>setTargetTime(Number(e.target.value)),disabled:isRunning,children:[/*#__PURE__*/_jsx(\"option\",{value:180,children:\"3 minutes\"}),/*#__PURE__*/_jsx(\"option\",{value:300,children:\"5 minutes\"}),/*#__PURE__*/_jsx(\"option\",{value:600,children:\"10 minutes\"}),/*#__PURE__*/_jsx(\"option\",{value:900,children:\"15 minutes\"}),/*#__PURE__*/_jsx(\"option\",{value:1200,children:\"20 minutes\"}),/*#__PURE__*/_jsx(\"option\",{value:1800,children:\"30 minutes\"})]})]}),/*#__PURE__*/_jsx(WalkingMap,{sessions:sessions,currentTrack:currentTrack,isTracking:isRunning&&!isPaused&&gpsEnabled})]});};export default WalkingTimer;","map":{"version":3,"names":["React","useState","useEffect","useRef","WalkingAnimation","ProgressionRecommendation","WalkingMap","jsx","_jsx","jsxs","_jsxs","WalkingTimer","isRunning","setIsRunning","isPaused","setIsPaused","currentTime","setCurrentTime","targetTime","setTargetTime","sessions","setSessions","currentTrack","setCurrentTrack","gpsEnabled","setGpsEnabled","intervalRef","gpsWatchRef","hasCompletedRef","currentTrackRef","storedSessions","localStorage","getItem","JSON","parse","current","setInterval","prevTime","newTime","clearInterval","session","date","Date","toISOString","duration","completed","gpsTrack","length","undefined","prevSessions","updatedSessions","setItem","stringify","setTimeout","navigator","geolocation","watchPosition","position","coordinate","lat","coords","latitude","lng","longitude","timestamp","now","prev","error","console","enableHighAccuracy","timeout","maximumAge","clearWatch","requestGPSPermission","permission","permissions","query","name","state","getCurrentPosition","formatTime","seconds","mins","Math","floor","secs","toString","padStart","handleStart","handlePause","handleResume","handleStop","handleAcceptRecommendation","progress","className","children","onAcceptRecommendation","isActive","onClick","disabled","width","height","viewBox","cx","cy","r","fill","stroke","strokeWidth","strokeDasharray","PI","strokeDashoffset","transform","style","transition","htmlFor","id","value","onChange","e","Number","target","isTracking"],"sources":["/Users/stevegreen/code/walking-fitness-app/src/components/WalkingTimer.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './WalkingTimer.css';\nimport WalkingAnimation from './WalkingAnimation';\nimport ProgressionRecommendation from './ProgressionRecommendation';\nimport WalkingMap from './WalkingMap';\nimport './WalkingMap.css';\nimport 'leaflet/dist/leaflet.css';\n\ninterface GPSCoordinate {\n  lat: number;\n  lng: number;\n  timestamp: number;\n}\n\ninterface WalkingSession {\n  date: string;\n  duration: number;\n  completed: boolean;\n  gpsTrack?: GPSCoordinate[];\n}\n\nconst WalkingTimer: React.FC = () => {\n  const [isRunning, setIsRunning] = useState(false);\n  const [isPaused, setIsPaused] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [targetTime, setTargetTime] = useState(300); // 5 minutes default\n  const [sessions, setSessions] = useState<WalkingSession[]>([]);\n  const [currentTrack, setCurrentTrack] = useState<GPSCoordinate[]>([]);\n  const [gpsEnabled, setGpsEnabled] = useState(false);\n  const intervalRef = useRef<ReturnType<typeof setInterval> | null>(null);\n  const gpsWatchRef = useRef<number | null>(null);\n  const hasCompletedRef = useRef(false);\n  const currentTrackRef = useRef<GPSCoordinate[]>([]);\n\n  useEffect(() => {\n    const storedSessions = localStorage.getItem('walkingSessions');\n    if (storedSessions) {\n      setSessions(JSON.parse(storedSessions));\n    }\n  }, []);\n\n  useEffect(() => {\n    if (isRunning && !isPaused) {\n      intervalRef.current = setInterval(() => {\n        setCurrentTime(prevTime => {\n          const newTime = prevTime + 1;\n          if (newTime >= targetTime) {\n            if (!hasCompletedRef.current) {\n              hasCompletedRef.current = true;\n            }\n            return targetTime;\n          }\n          return newTime;\n        });\n      }, 1000);\n    } else {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    }\n\n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    };\n  }, [isRunning, isPaused, targetTime]);\n\n  // Separate effect to handle completion\n  useEffect(() => {\n    if (currentTime >= targetTime && isRunning && hasCompletedRef.current) {\n      // Stop the timer immediately\n      setIsRunning(false);\n      setIsPaused(false);\n      \n      // Save session to localStorage\n      const session: WalkingSession = {\n        date: new Date().toISOString(),\n        duration: targetTime,\n        completed: true,\n        gpsTrack: currentTrackRef.current.length > 0 ? currentTrackRef.current : undefined\n      };\n      \n      setSessions(prevSessions => {\n        const updatedSessions = [...prevSessions, session];\n        localStorage.setItem('walkingSessions', JSON.stringify(updatedSessions));\n        return updatedSessions;\n      });\n      \n      // Reset current time\n      setTimeout(() => {\n        setCurrentTime(0);\n      }, 0);\n    }\n  }, [currentTime, targetTime, isRunning]);\n\n  // GPS tracking effect\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(() => {\n    if (isRunning && !isPaused && gpsEnabled) {\n      if ('geolocation' in navigator) {\n        gpsWatchRef.current = navigator.geolocation.watchPosition(\n          (position) => {\n            const coordinate: GPSCoordinate = {\n              lat: position.coords.latitude,\n              lng: position.coords.longitude,\n              timestamp: Date.now()\n            };\n            setCurrentTrack(prev => [...prev, coordinate]);\n          },\n          (error) => {\n            console.error('GPS tracking error:', error);\n          },\n          {\n            enableHighAccuracy: true,\n            timeout: 10000,\n            maximumAge: 0\n          }\n        );\n      }\n    } else {\n      if (gpsWatchRef.current) {\n        navigator.geolocation.clearWatch(gpsWatchRef.current);\n        gpsWatchRef.current = null;\n      }\n    }\n\n    return () => {\n      if (gpsWatchRef.current) {\n        navigator.geolocation.clearWatch(gpsWatchRef.current);\n      }\n    };\n  }, [isRunning, isPaused, gpsEnabled]);\n\n  // Keep ref in sync with currentTrack state\n  useEffect(() => {\n    currentTrackRef.current = currentTrack;\n  }, [currentTrack]);\n\n  const requestGPSPermission = async () => {\n    if ('geolocation' in navigator) {\n      try {\n        const permission = await navigator.permissions.query({ name: 'geolocation' });\n        if (permission.state === 'granted') {\n          setGpsEnabled(true);\n        } else if (permission.state === 'prompt') {\n          navigator.geolocation.getCurrentPosition(\n            () => setGpsEnabled(true),\n            (error) => {\n              console.error('GPS permission denied:', error);\n              setGpsEnabled(false);\n            }\n          );\n        }\n      } catch (error) {\n        console.error('GPS permission error:', error);\n      }\n    }\n  };\n\n  const formatTime = (seconds: number): string => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  const handleStart = () => {\n    setIsRunning(true);\n    setIsPaused(false);\n    hasCompletedRef.current = false;\n    setCurrentTrack([]); // Reset GPS track for new session\n  };\n\n  const handlePause = () => {\n    setIsPaused(true);\n  };\n\n  const handleResume = () => {\n    setIsPaused(false);\n  };\n\n  const handleStop = () => {\n    setIsRunning(false);\n    setIsPaused(false);\n    hasCompletedRef.current = false;\n    \n    // Save incomplete session if any time was walked\n    if (currentTime > 0) {\n      const session: WalkingSession = {\n        date: new Date().toISOString(),\n        duration: currentTime,\n        completed: false,\n        gpsTrack: currentTrackRef.current.length > 0 ? currentTrackRef.current : undefined\n      };\n      \n      const updatedSessions = [...sessions, session];\n      setSessions(updatedSessions);\n      localStorage.setItem('walkingSessions', JSON.stringify(updatedSessions));\n    }\n    \n    setCurrentTime(0);\n    setCurrentTrack([]); // Reset GPS track\n  };\n\n\n  const handleAcceptRecommendation = (duration: number) => {\n    setTargetTime(duration);\n  };\n\n  const progress = (currentTime / targetTime) * 100;\n\n  return (\n    <div className=\"walking-timer\">\n      <ProgressionRecommendation \n        sessions={sessions}\n        onAcceptRecommendation={handleAcceptRecommendation}\n      />\n      \n      <WalkingAnimation isActive={isRunning && !isPaused} />\n      \n      <div className=\"gps-controls\">\n        <button \n          className={`btn btn-gps ${gpsEnabled ? 'active' : ''}`}\n          onClick={requestGPSPermission}\n          disabled={isRunning}\n        >\n          📍 {gpsEnabled ? 'GPS Enabled' : 'Enable GPS Tracking'}\n        </button>\n        {gpsEnabled && currentTrack.length > 0 && (\n          <span className=\"gps-status\">\n            📊 {currentTrack.length} GPS points recorded\n          </span>\n        )}\n      </div>\n      \n      <div className=\"timer-display\">\n        <div className=\"progress-circle\">\n          <svg width=\"200\" height=\"200\" viewBox=\"0 0 200 200\">\n            <circle\n              cx=\"100\"\n              cy=\"100\"\n              r=\"90\"\n              fill=\"none\"\n              stroke=\"#e0e0e0\"\n              strokeWidth=\"8\"\n            />\n            <circle\n              cx=\"100\"\n              cy=\"100\"\n              r=\"90\"\n              fill=\"none\"\n              stroke=\"#4CAF50\"\n              strokeWidth=\"8\"\n              strokeDasharray={`${2 * Math.PI * 90}`}\n              strokeDashoffset={`${2 * Math.PI * 90 * (1 - progress / 100)}`}\n              transform=\"rotate(-90 100 100)\"\n              style={{ transition: 'stroke-dashoffset 0.5s ease' }}\n            />\n          </svg>\n          <div className=\"timer-text\">\n            <div className=\"current-time\">{formatTime(currentTime)}</div>\n            <div className=\"target-time\">/ {formatTime(targetTime)}</div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"timer-controls\">\n        {!isRunning ? (\n          <button className=\"btn btn-start\" onClick={handleStart}>\n            Start Walking\n          </button>\n        ) : (\n          <div className=\"control-group\">\n            {isPaused ? (\n              <button className=\"btn btn-resume\" onClick={handleResume}>\n                Resume\n              </button>\n            ) : (\n              <button className=\"btn btn-pause\" onClick={handlePause}>\n                Pause\n              </button>\n            )}\n            <button className=\"btn btn-stop\" onClick={handleStop}>\n              Stop\n            </button>\n          </div>\n        )}\n      </div>\n\n      <div className=\"target-selector\">\n        <label htmlFor=\"target-time\">Target Duration:</label>\n        <select\n          id=\"target-time\"\n          value={targetTime}\n          onChange={(e) => setTargetTime(Number(e.target.value))}\n          disabled={isRunning}\n        >\n          <option value={180}>3 minutes</option>\n          <option value={300}>5 minutes</option>\n          <option value={600}>10 minutes</option>\n          <option value={900}>15 minutes</option>\n          <option value={1200}>20 minutes</option>\n          <option value={1800}>30 minutes</option>\n        </select>\n      </div>\n\n      <WalkingMap \n        sessions={sessions}\n        currentTrack={currentTrack}\n        isTracking={isRunning && !isPaused && gpsEnabled}\n      />\n    </div>\n  );\n};\n\nexport default WalkingTimer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}