{"ast":null,"code":"import React from'react';import{MapContainer,TileLayer,Polyline,Marker,Popup}from'react-leaflet';import L from'leaflet';import'leaflet/dist/leaflet.css';// Fix for default markers in react-leaflet\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";delete L.Icon.Default.prototype._getIconUrl;L.Icon.Default.mergeOptions({iconRetinaUrl:'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/images/marker-icon-2x.png',iconUrl:'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/images/marker-icon.png',shadowUrl:'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/images/marker-shadow.png'});const WalkingMap=_ref=>{let{sessions,currentTrack,isTracking}=_ref;// Find all GPS tracks\nconst allTracks=sessions.filter(session=>session.gpsTrack&&session.gpsTrack.length>0);// Calculate map center and zoom\nconst allCoordinates=[...currentTrack,...allTracks.flatMap(session=>session.gpsTrack||[])];// Calculate center - use GPS data if available, otherwise default location\nlet center=[37.7749,-122.4194];// Default to San Francisco\nif(allCoordinates.length>0){const latitudes=allCoordinates.map(coord=>coord.lat);const longitudes=allCoordinates.map(coord=>coord.lng);center=[(Math.max(...latitudes)+Math.min(...latitudes))/2,(Math.max(...longitudes)+Math.min(...longitudes))/2];}const formatDuration=seconds=>{const mins=Math.floor(seconds/60);return`${mins} min`;};const formatDate=dateString=>{return new Date(dateString).toLocaleDateString();};return/*#__PURE__*/_jsxs(\"div\",{className:\"walking-map\",children:[allCoordinates.length===0&&/*#__PURE__*/_jsx(\"div\",{className:\"map-overlay\",children:/*#__PURE__*/_jsx(\"p\",{children:\"\\uD83D\\uDCCD Enable GPS tracking to see your walking routes on the map!\"})}),/*#__PURE__*/_jsxs(MapContainer,{center:center,zoom:13,style:{height:'400px',width:'100%'},children:[/*#__PURE__*/_jsx(TileLayer,{attribution:\"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",url:\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"}),allTracks.map((session,index)=>{const track=session.gpsTrack;const polylinePoints=track.map(coord=>[coord.lat,coord.lng]);return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(Polyline,{positions:polylinePoints,color:session.completed?\"#4CAF50\":\"#FF9800\",weight:3,opacity:0.7}),track.length>0&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Marker,{position:[track[0].lat,track[0].lng],children:/*#__PURE__*/_jsx(Popup,{children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Start\"}),/*#__PURE__*/_jsx(\"br\",{}),formatDate(session.date),/*#__PURE__*/_jsx(\"br\",{}),\"Duration: \",formatDuration(session.duration),/*#__PURE__*/_jsx(\"br\",{}),\"Status: \",session.completed?'Completed':'Incomplete']})})}),track.length>1&&/*#__PURE__*/_jsx(Marker,{position:[track[track.length-1].lat,track[track.length-1].lng],children:/*#__PURE__*/_jsx(Popup,{children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"End\"}),/*#__PURE__*/_jsx(\"br\",{}),formatDate(session.date),/*#__PURE__*/_jsx(\"br\",{}),\"Duration: \",formatDuration(session.duration),/*#__PURE__*/_jsx(\"br\",{}),\"Status: \",session.completed?'Completed':'Incomplete']})})})]})]},index);}),isTracking&&currentTrack.length>0&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Polyline,{positions:currentTrack.map(coord=>[coord.lat,coord.lng]),color:\"#2196F3\",weight:4,opacity:0.8}),currentTrack.length>0&&/*#__PURE__*/_jsx(Marker,{position:[currentTrack[currentTrack.length-1].lat,currentTrack[currentTrack.length-1].lng],children:/*#__PURE__*/_jsx(Popup,{children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Current Position\"}),/*#__PURE__*/_jsx(\"br\",{}),\"Live tracking active\"]})})})]})]})]});};export default WalkingMap;","map":{"version":3,"names":["React","MapContainer","TileLayer","Polyline","Marker","Popup","L","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","WalkingMap","_ref","sessions","currentTrack","isTracking","allTracks","filter","session","gpsTrack","length","allCoordinates","flatMap","center","latitudes","map","coord","lat","longitudes","lng","Math","max","min","formatDuration","seconds","mins","floor","formatDate","dateString","Date","toLocaleDateString","className","children","zoom","style","height","width","attribution","url","index","track","polylinePoints","positions","color","completed","weight","opacity","position","date","duration"],"sources":["/Users/stevegreen/code/walking-fitness-app/src/components/WalkingMap.tsx"],"sourcesContent":["import React from 'react';\nimport { MapContainer, TileLayer, Polyline, Marker, Popup } from 'react-leaflet';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\n\n// Fix for default markers in react-leaflet\ndelete (L.Icon.Default.prototype as any)._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/images/marker-icon-2x.png',\n  iconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/images/marker-icon.png',\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/images/marker-shadow.png',\n});\n\ninterface GPSCoordinate {\n  lat: number;\n  lng: number;\n  timestamp: number;\n}\n\ninterface WalkingSession {\n  date: string;\n  duration: number;\n  completed: boolean;\n  gpsTrack?: GPSCoordinate[];\n}\n\ninterface WalkingMapProps {\n  sessions: WalkingSession[];\n  currentTrack: GPSCoordinate[];\n  isTracking: boolean;\n}\n\nconst WalkingMap: React.FC<WalkingMapProps> = ({ sessions, currentTrack, isTracking }) => {\n  // Find all GPS tracks\n  const allTracks = sessions.filter(session => session.gpsTrack && session.gpsTrack.length > 0);\n  \n  // Calculate map center and zoom\n  const allCoordinates: GPSCoordinate[] = [\n    ...currentTrack,\n    ...allTracks.flatMap(session => session.gpsTrack || [])\n  ];\n\n  // Calculate center - use GPS data if available, otherwise default location\n  let center: [number, number] = [37.7749, -122.4194]; // Default to San Francisco\n  \n  if (allCoordinates.length > 0) {\n    const latitudes = allCoordinates.map(coord => coord.lat);\n    const longitudes = allCoordinates.map(coord => coord.lng);\n    center = [\n      (Math.max(...latitudes) + Math.min(...latitudes)) / 2,\n      (Math.max(...longitudes) + Math.min(...longitudes)) / 2\n    ];\n  }\n\n  const formatDuration = (seconds: number): string => {\n    const mins = Math.floor(seconds / 60);\n    return `${mins} min`;\n  };\n\n  const formatDate = (dateString: string): string => {\n    return new Date(dateString).toLocaleDateString();\n  };\n\n  return (\n    <div className=\"walking-map\">\n      {allCoordinates.length === 0 && (\n        <div className=\"map-overlay\">\n          <p>üìç Enable GPS tracking to see your walking routes on the map!</p>\n        </div>\n      )}\n      <MapContainer center={center} zoom={13} style={{ height: '400px', width: '100%' }}>\n        <TileLayer\n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        \n        {/* Render completed walking sessions */}\n        {allTracks.map((session, index) => {\n          const track = session.gpsTrack!;\n          const polylinePoints: [number, number][] = track.map(coord => [coord.lat, coord.lng]);\n          \n          return (\n            <React.Fragment key={index}>\n              <Polyline\n                positions={polylinePoints}\n                color={session.completed ? \"#4CAF50\" : \"#FF9800\"}\n                weight={3}\n                opacity={0.7}\n              />\n              {track.length > 0 && (\n                <>\n                  {/* Start marker */}\n                  <Marker position={[track[0].lat, track[0].lng]}>\n                    <Popup>\n                      <div>\n                        <strong>Start</strong><br />\n                        {formatDate(session.date)}<br />\n                        Duration: {formatDuration(session.duration)}<br />\n                        Status: {session.completed ? 'Completed' : 'Incomplete'}\n                      </div>\n                    </Popup>\n                  </Marker>\n                  \n                  {/* End marker (if different from start) */}\n                  {track.length > 1 && (\n                    <Marker position={[track[track.length - 1].lat, track[track.length - 1].lng]}>\n                      <Popup>\n                        <div>\n                          <strong>End</strong><br />\n                          {formatDate(session.date)}<br />\n                          Duration: {formatDuration(session.duration)}<br />\n                          Status: {session.completed ? 'Completed' : 'Incomplete'}\n                        </div>\n                      </Popup>\n                    </Marker>\n                  )}\n                </>\n              )}\n            </React.Fragment>\n          );\n        })}\n        \n        {/* Render current active track */}\n        {isTracking && currentTrack.length > 0 && (\n          <>\n            <Polyline\n              positions={currentTrack.map(coord => [coord.lat, coord.lng])}\n              color=\"#2196F3\"\n              weight={4}\n              opacity={0.8}\n            />\n            \n            {/* Current position marker */}\n            {currentTrack.length > 0 && (\n              <Marker position={[\n                currentTrack[currentTrack.length - 1].lat, \n                currentTrack[currentTrack.length - 1].lng\n              ]}>\n                <Popup>\n                  <div>\n                    <strong>Current Position</strong><br />\n                    Live tracking active\n                  </div>\n                </Popup>\n              </Marker>\n            )}\n          </>\n        )}\n      </MapContainer>\n    </div>\n  );\n};\n\nexport default WalkingMap;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,YAAY,CAAEC,SAAS,CAAEC,QAAQ,CAAEC,MAAM,CAAEC,KAAK,KAAQ,eAAe,CAChF,MAAO,CAAAC,CAAC,KAAM,SAAS,CACvB,MAAO,0BAA0B,CAEjC;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBACA,MAAQ,CAAAN,CAAC,CAACO,IAAI,CAACC,OAAO,CAACC,SAAS,CAASC,WAAW,CACpDV,CAAC,CAACO,IAAI,CAACC,OAAO,CAACG,YAAY,CAAC,CAC1BC,aAAa,CAAE,gFAAgF,CAC/FC,OAAO,CAAE,6EAA6E,CACtFC,SAAS,CAAE,+EACb,CAAC,CAAC,CAqBF,KAAM,CAAAC,UAAqC,CAAGC,IAAA,EAA4C,IAA3C,CAAEC,QAAQ,CAAEC,YAAY,CAAEC,UAAW,CAAC,CAAAH,IAAA,CACnF;AACA,KAAM,CAAAI,SAAS,CAAGH,QAAQ,CAACI,MAAM,CAACC,OAAO,EAAIA,OAAO,CAACC,QAAQ,EAAID,OAAO,CAACC,QAAQ,CAACC,MAAM,CAAG,CAAC,CAAC,CAE7F;AACA,KAAM,CAAAC,cAA+B,CAAG,CACtC,GAAGP,YAAY,CACf,GAAGE,SAAS,CAACM,OAAO,CAACJ,OAAO,EAAIA,OAAO,CAACC,QAAQ,EAAI,EAAE,CAAC,CACxD,CAED;AACA,GAAI,CAAAI,MAAwB,CAAG,CAAC,OAAO,CAAE,CAAC,QAAQ,CAAC,CAAE;AAErD,GAAIF,cAAc,CAACD,MAAM,CAAG,CAAC,CAAE,CAC7B,KAAM,CAAAI,SAAS,CAAGH,cAAc,CAACI,GAAG,CAACC,KAAK,EAAIA,KAAK,CAACC,GAAG,CAAC,CACxD,KAAM,CAAAC,UAAU,CAAGP,cAAc,CAACI,GAAG,CAACC,KAAK,EAAIA,KAAK,CAACG,GAAG,CAAC,CACzDN,MAAM,CAAG,CACP,CAACO,IAAI,CAACC,GAAG,CAAC,GAAGP,SAAS,CAAC,CAAGM,IAAI,CAACE,GAAG,CAAC,GAAGR,SAAS,CAAC,EAAI,CAAC,CACrD,CAACM,IAAI,CAACC,GAAG,CAAC,GAAGH,UAAU,CAAC,CAAGE,IAAI,CAACE,GAAG,CAAC,GAAGJ,UAAU,CAAC,EAAI,CAAC,CACxD,CACH,CAEA,KAAM,CAAAK,cAAc,CAAIC,OAAe,EAAa,CAClD,KAAM,CAAAC,IAAI,CAAGL,IAAI,CAACM,KAAK,CAACF,OAAO,CAAG,EAAE,CAAC,CACrC,MAAO,GAAGC,IAAI,MAAM,CACtB,CAAC,CAED,KAAM,CAAAE,UAAU,CAAIC,UAAkB,EAAa,CACjD,MAAO,IAAI,CAAAC,IAAI,CAACD,UAAU,CAAC,CAACE,kBAAkB,CAAC,CAAC,CAClD,CAAC,CAED,mBACExC,KAAA,QAAKyC,SAAS,CAAC,aAAa,CAAAC,QAAA,EACzBrB,cAAc,CAACD,MAAM,GAAK,CAAC,eAC1BtB,IAAA,QAAK2C,SAAS,CAAC,aAAa,CAAAC,QAAA,cAC1B5C,IAAA,MAAA4C,QAAA,CAAG,yEAA6D,CAAG,CAAC,CACjE,CACN,cACD1C,KAAA,CAACT,YAAY,EAACgC,MAAM,CAAEA,MAAO,CAACoB,IAAI,CAAE,EAAG,CAACC,KAAK,CAAE,CAAEC,MAAM,CAAE,OAAO,CAAEC,KAAK,CAAE,MAAO,CAAE,CAAAJ,QAAA,eAChF5C,IAAA,CAACN,SAAS,EACRuD,WAAW,CAAC,yFAAyF,CACrGC,GAAG,CAAC,oDAAoD,CACzD,CAAC,CAGDhC,SAAS,CAACS,GAAG,CAAC,CAACP,OAAO,CAAE+B,KAAK,GAAK,CACjC,KAAM,CAAAC,KAAK,CAAGhC,OAAO,CAACC,QAAS,CAC/B,KAAM,CAAAgC,cAAkC,CAAGD,KAAK,CAACzB,GAAG,CAACC,KAAK,EAAI,CAACA,KAAK,CAACC,GAAG,CAAED,KAAK,CAACG,GAAG,CAAC,CAAC,CAErF,mBACE7B,KAAA,CAACV,KAAK,CAACW,QAAQ,EAAAyC,QAAA,eACb5C,IAAA,CAACL,QAAQ,EACP2D,SAAS,CAAED,cAAe,CAC1BE,KAAK,CAAEnC,OAAO,CAACoC,SAAS,CAAG,SAAS,CAAG,SAAU,CACjDC,MAAM,CAAE,CAAE,CACVC,OAAO,CAAE,GAAI,CACd,CAAC,CACDN,KAAK,CAAC9B,MAAM,CAAG,CAAC,eACfpB,KAAA,CAAAE,SAAA,EAAAwC,QAAA,eAEE5C,IAAA,CAACJ,MAAM,EAAC+D,QAAQ,CAAE,CAACP,KAAK,CAAC,CAAC,CAAC,CAACvB,GAAG,CAAEuB,KAAK,CAAC,CAAC,CAAC,CAACrB,GAAG,CAAE,CAAAa,QAAA,cAC7C5C,IAAA,CAACH,KAAK,EAAA+C,QAAA,cACJ1C,KAAA,QAAA0C,QAAA,eACE5C,IAAA,WAAA4C,QAAA,CAAQ,OAAK,CAAQ,CAAC,cAAA5C,IAAA,QAAK,CAAC,CAC3BuC,UAAU,CAACnB,OAAO,CAACwC,IAAI,CAAC,cAAC5D,IAAA,QAAK,CAAC,aACtB,CAACmC,cAAc,CAACf,OAAO,CAACyC,QAAQ,CAAC,cAAC7D,IAAA,QAAK,CAAC,WAC1C,CAACoB,OAAO,CAACoC,SAAS,CAAG,WAAW,CAAG,YAAY,EACpD,CAAC,CACD,CAAC,CACF,CAAC,CAGRJ,KAAK,CAAC9B,MAAM,CAAG,CAAC,eACftB,IAAA,CAACJ,MAAM,EAAC+D,QAAQ,CAAE,CAACP,KAAK,CAACA,KAAK,CAAC9B,MAAM,CAAG,CAAC,CAAC,CAACO,GAAG,CAAEuB,KAAK,CAACA,KAAK,CAAC9B,MAAM,CAAG,CAAC,CAAC,CAACS,GAAG,CAAE,CAAAa,QAAA,cAC3E5C,IAAA,CAACH,KAAK,EAAA+C,QAAA,cACJ1C,KAAA,QAAA0C,QAAA,eACE5C,IAAA,WAAA4C,QAAA,CAAQ,KAAG,CAAQ,CAAC,cAAA5C,IAAA,QAAK,CAAC,CACzBuC,UAAU,CAACnB,OAAO,CAACwC,IAAI,CAAC,cAAC5D,IAAA,QAAK,CAAC,aACtB,CAACmC,cAAc,CAACf,OAAO,CAACyC,QAAQ,CAAC,cAAC7D,IAAA,QAAK,CAAC,WAC1C,CAACoB,OAAO,CAACoC,SAAS,CAAG,WAAW,CAAG,YAAY,EACpD,CAAC,CACD,CAAC,CACF,CACT,EACD,CACH,GAnCkBL,KAoCL,CAAC,CAErB,CAAC,CAAC,CAGDlC,UAAU,EAAID,YAAY,CAACM,MAAM,CAAG,CAAC,eACpCpB,KAAA,CAAAE,SAAA,EAAAwC,QAAA,eACE5C,IAAA,CAACL,QAAQ,EACP2D,SAAS,CAAEtC,YAAY,CAACW,GAAG,CAACC,KAAK,EAAI,CAACA,KAAK,CAACC,GAAG,CAAED,KAAK,CAACG,GAAG,CAAC,CAAE,CAC7DwB,KAAK,CAAC,SAAS,CACfE,MAAM,CAAE,CAAE,CACVC,OAAO,CAAE,GAAI,CACd,CAAC,CAGD1C,YAAY,CAACM,MAAM,CAAG,CAAC,eACtBtB,IAAA,CAACJ,MAAM,EAAC+D,QAAQ,CAAE,CAChB3C,YAAY,CAACA,YAAY,CAACM,MAAM,CAAG,CAAC,CAAC,CAACO,GAAG,CACzCb,YAAY,CAACA,YAAY,CAACM,MAAM,CAAG,CAAC,CAAC,CAACS,GAAG,CACzC,CAAAa,QAAA,cACA5C,IAAA,CAACH,KAAK,EAAA+C,QAAA,cACJ1C,KAAA,QAAA0C,QAAA,eACE5C,IAAA,WAAA4C,QAAA,CAAQ,kBAAgB,CAAQ,CAAC,cAAA5C,IAAA,QAAK,CAAC,uBAEzC,EAAK,CAAC,CACD,CAAC,CACF,CACT,EACD,CACH,EACW,CAAC,EACZ,CAAC,CAEV,CAAC,CAED,cAAe,CAAAa,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}